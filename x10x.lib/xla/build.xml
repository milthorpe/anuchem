<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [<!ENTITY buildfile SYSTEM "file:./build-user.xml">]>
<project name="X10 Linear Algebra project" default="build" basedir=".">
    &buildfile;
    <property environment="env"/>
    <property name="x10rt" value="sockets"/>
    <property name="x10.testlib" location="${user.home}/x10-trunk/x10.tests/examples/x10lib"/>
    <property name="bash.exe" value="bash"/>    
    <property name="optimize" value="true" />
    <property name="nochecks" value="true" />
    <property name="cpuprofile"  value="false"/>
    <property name="perftoolsHome" location="/scratch/perftools"/>
	<property name="target" location="${basedir}/target" />
	<property name="target-src" location="${target}/classes" />
	<property name="target-test" location="${target}/test-classes" />
	<property name="lib" location="${basedir}/lib" />
	<property name="jar" value="xla.jar"/>
    <property name="x10lib-cpp" value="xla_${x10rt}" />
    <property name="ar" value="xla.a"/>
    <property name="testclass" value="test/x10x/matrix/BenchmarkMatrix.x10"/>

    <condition property="x10c.optimize" value="-O" else="">
        <istrue value="${optimize}" />
    </condition>

    <condition property="x10c.nochecks" value="-NO_CHECKS -VERBOSE_CHECKS=true" else="-VERBOSE_CHECKS=true">
        <istrue value="${nochecks}" />
    </condition>

    <condition property="post.cpuprofile" value="-L${perftoolsHome}/lib -lprofiler" else="">
        <istrue value="${cpuprofile}"/>
    </condition>

	<target name="init">
        <mkdir dir="${target}"/>
	</target>

    <target name="build" depends="dist"/>

	<target name="dist" depends="buildx10lib-cpp">
        <mkdir dir="${lib}"/>
        <copy todir="${lib}">
            <fileset dir="${target}" includes="${jar}"/>
        </copy>
    </target>

	<target name="jar" depends="build-src-java">
        <jar jarfile="${target}/${jar}">
            <fileset dir="${target-src}" includes="**/*.class" excludes="${jar}"/>
        </jar>
    </target>

    <target name="build-src-java" depends="check-src-java" unless="src.uptodate.java">
        <echo message="Building source tree"/>

        <exec executable="${bash.exe}" failonerror="true" dir="${basedir}/src">
            <arg value="-c"/>
            <arg value="'x10c' ${x10c.optimize} -sourcepath . -commandlineonly -d '${target-src}' ${changed.src.files}"/>
        </exec>
    </target>

    <target name="build-src-cpp" depends="check-src-cpp" unless="src.uptodate.cpp">
        <echo message="Building source tree"/>

        <fileset id="changed.src.files" dir="${basedir}/src" includes="**/*.x10">
            <depend targetdir="${target}/classes">
                <mapper type="glob" from="*.x10" to="*.cc"/>
            </depend>
        </fileset>

        <pathconvert property="src.list" refid="changed.src.files" dirsep="/" pathsep=" ">
            <map from="${basedir}${file.separator}src${file.separator}" to=""/>
        </pathconvert>
        <echo message="x10c++ -x10rt ${x10rt} ${x10c.nochecks} ${x10c.optimize} -sourcepath .${path.separator}${x10.testlib} ${basedir}/${testclass}"/>

        <exec executable="${bash.exe}" failonerror="true" dir="${basedir}/src">
            <arg value="-c"/> 
            <arg value="'x10c++' -x10rt ${x10rt} ${x10c.nochecks} ${x10c.optimize} -report postcompile=1 -post '# ${post.cpuprofile}' -sourcepath .${path.separator}${x10.testlib} -d ${target-src} ${basedir}/${testclass}"/>
        </exec>
    </target>

	<target name="check-lib">
        <fileset id="src.files" dir="${basedir}/src" includes="**/*.x10"/>
        <uptodate property="lib.uptodate.cpp">
            <srcfiles refid="src.files"/>
            <globmapper from="*.x10" to="include/*.cc" handledirsep="true"/>
        </uptodate>
    </target>

    <target name="buildx10lib-cpp" depends="check-lib" unless="lib.uptodate.cpp">
        <echo message="Building source tree"/>
        <mkdir dir="include"/>
        <mkdir dir="lib"/>

        <fileset id="src.files" dir="${basedir}/src" includes="**/*.x10" />

        <pathconvert property="src.list" refid="src.files" dirsep="/" pathsep=" ">
            <map from="${basedir}${file.separator}src${file.separator}" to=""/>
        </pathconvert>
        <echo message="x10c++ -x10rt ${x10rt} ${x10c.optimize} ${x10c.nochecks} -sourcepath . -buildx10lib ../. ${src.list} -d ../include -o ${x10lib-cpp}"/>

        <exec executable="${bash.exe}" failonerror="true" dir="${basedir}/src">
            <arg value="-c"/>
            <arg value="'x10c++' -x10rt ${x10rt} ${x10c.optimize} ${x10c.nochecks} -report postcompile=1 -sourcepath . -buildx10lib ../. ${src.list} -d ../include -o ${x10lib-cpp}"/>
        </exec>

        <jar jarfile="${x10lib-cpp}.jar">
            <fileset dir="${basedir}/src" includes="**/*.x10" />
        </jar>
    </target>

	<target name="init-src" depends="init">
        <mkdir dir="${target-src}"/>
	</target>

	<target name="check-src-java" depends="init-src">
        <fileset id="src.files" dir="${basedir}/src" includes="**/*.x10"/>
        <uptodate property="src.uptodate.java">
            <srcfiles refid="src.files"/>
            <globmapper from="*.x10" to="${target-src}/*.java" handledirsep="true"/>
        </uptodate>
        <pathconvert property="changed.src.files" refid="src.files" dirsep="/" pathsep=" ">
            <map from="${basedir}${file.separator}src${file.separator}" to=""/>
        </pathconvert>
    </target>

    <target name="check-src-cpp" depends="init-src">
        <fileset id="src.files" dir="${basedir}/src" includes="**/*.x10"/>
        <uptodate property="src.uptodate.cpp">
            <srcfiles refid="src.files"/>
            <globmapper from="*.x10" to="${target-src}/*.cc" handledirsep="true"/>
        </uptodate>
    </target>
    
    <target name="build-test" depends="check-test,build-harness,build-src-java" unless="test.uptodate">
        <echo message="Building tests"/>

        <fileset id="changed.test.files" dir="${basedir}/test" includes="**/*.x10">
            <depend targetdir="${target}/test-classes">
                <mapper type="glob" from="*.x10" to="*.java"/>
            </depend>
        </fileset>

        <pathconvert property="test.list" refid="changed.test.files" dirsep="/" pathsep=" ">
            <map from="${basedir}${file.separator}test${file.separator}" to=""/>
        </pathconvert>
        <echo message="x10c ${test.list}"/>

        <exec executable="${bash.exe}" failonerror="true" dir="${basedir}/test">
            <arg value="-c"/>
            <arg value="'x10c' ${x10c.optimize} -sourcepath '${x10.testlib}${path.separator}${basedir}/src${path.separator}.' -classpath '${target-src}' -commandlineonly -d '${target-test}' ${test.list}"/>
        </exec>
    </target>

    <target name="test" depends="build-test">
        <apply executable="x10" failonerror="true" dir="${target-test}" relative="true" addsourcefile="false">
            <arg line="-t -v -mx 128M -classpath '${target-src}${path.separator}${target-test}'" />
            <targetfile/>

            <fileset dir="${target-test}" includes="**/Test*.java" />
            <mapper type="glob" from="*.java" to="*"/>
        </apply>
    </target>

	<target name="init-test" depends="init">
        <mkdir dir="${target-test}"/>
	</target>

	<target name="check-test" depends="init-test">
        <fileset id="test.files" dir="${basedir}/test" includes="**/*.x10"/>
        <uptodate property="test.uptodate">
            <srcfiles refid="test.files"/>
            <globmapper from="*.x10" to="${target-test}/*.java" handledirsep="true"/>
        </uptodate>
    </target>

	<target name="build-harness" depends="init-test,check-harness" unless="harness.uptodate">
        <echo message="Building test harness"/>
		<echo message="x10c '${x10.testlib}/harness/x10Test.x10'"/>
        <exec executable="${bash.exe}" failonerror="true" dir="${basedir}/test">
            <arg value="-c"/>
            <arg value="'x10c' ${x10c.optimize} -sourcepath . -commandlineonly -d '${target-test}' '${x10.testlib}/harness/x10Test.x10'"/>
        </exec>
    </target>

	<target name="check-harness" >
		<uptodate property="harness.uptodate">
			<srcfiles dir="${x10.testlib}" includes="harness/*.x10"/>
	 		<globmapper from="*.x10" to="${target-test}/*.java" handledirsep="true"/>
		</uptodate>
    </target>

	<target name="clean">
        <delete file="${x10lib-cpp}.properties" />
        <delete file="${x10lib-cpp}.jar" />
        <delete dir="include" />
		<delete dir="target" />
		<delete dir="lib" />
	</target>

</project>
